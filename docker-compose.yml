version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: bouncer_postgres
    environment:
      POSTGRES_DB: bouncer_db
      POSTGRES_USER: bouncer_user
      POSTGRES_PASSWORD: bouncer_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - bouncer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bouncer_user -d bouncer_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bouncer_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - bouncer_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bouncer_backend
    environment:
      - DATABASE_URL=postgresql://bouncer_user:bouncer_pass@localhost:5433/bouncer_db
      - REDIS_URL=redis://localhost:6380
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bouncer_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bouncer_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    networks:
      - bouncer_network
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  redis_data:

networks:
  bouncer_network:
    driver: bridge